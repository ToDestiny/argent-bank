swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  contact:
    name: Anthony COLAS
    url: https://anthonycolas.com
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
tags:
  - name: User Module
  - name: Transaction Module
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/components/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/components/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/components/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/components/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User Profile Retrieved Successully
          schema:
            $ref: '#/components/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for Updating User Profiles
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update User Profile Attributes
          required: true
          schema:
            $ref: '#/components/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User Profile Retrieved Successully
          schema:
            $ref: '#/components/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /transactions/getTranssaction:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Transactions API
      description: API for Fetching List
      parameters:
        - in: query
          type: string
          name: Month
          description: Month search
          required: true
        - in: query
          type: string
          name: Year
          description: Year search
          required: true  
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Monthly Transactions Retrieved Successully
          schema:
            $ref: '#/components/GetTransactionsResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /transactions/{transactionID}:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary:  Transaction API
      description: API Find Transaction by ID
      operationId: getTransactionById
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - name: transactionID
          in: path
          description: ID of Transaction
          required: true
          type: integer
          format: int64
      produces:
        - application/json
      responses:
        '200':
          description: Transaction Retrieved Successully
          schema:
            $ref: '#/components/TransactionResponse'
        '400':
          description: Invalid TransactionID  
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Transaction API
      description: Update a transaction from the Database
      operationId: updateTransactionById
      parameters: 
        - in: header
          type: string 
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - name: transactionID
          in: path
          description: ID of transaction update
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Send Transaction Information
          required: true
          schema:
            $ref: '#/components/AddTransaction'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction Updated Successully
          schema:
            $ref: '#/components/AddTransactionResponse'
        '400':
          description: Invalid TransactionID
        '500':
          description: Internal Server Error
    delete:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Transaction API
      description: Delete a transaction from the Database
      operationId: deleteTransactionById
      parameters: 
        - in: header
          type: string 
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - name: transactionID
          in: path
          description: ID of transaction update
          required: true
          type: integer
          format: int64
      produces:
        - application/json
      responses:
        '204':
          description: Resource deleted
        '400':
          description: Invalid TransactionID
        '500':
          description: Internal Server Error
  /transactions/addTransaction:
    put:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Transaction API
      description: Add a Transaction to the Database
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Send Transaction Information
          required: true
          schema:
            $ref: '#/components/AddTransaction'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction Added Successully
          schema:
            $ref: '#/components/AddTransactionResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
components:
  User:
    properties:
      email:
        type: string
        description: User Email
      password:
        type: string
        description: User Password
      firstName:
        type: string
        description: User First Name
      lastName:
        type: string
        description: User Last Mame
  Login:
    properties:
      email:
        type: string
        description: User Email
      password:
        type: string
        description: User Password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  GetTransactionsResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body: 
        type: object
        properties:
          id:
            type: string
          transactions:
            type: object
            description: data  
  TransactionResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body: 
        type: object
        properties:
          date:
            type: string
          description:
            type: string
          amont:
            type: string
          transactionType:
            type: string
          category:
            type: string
          notes:
            type: string
  AddTransaction:
    type: object
    properties:
      date:
        type: string
      description:
        type: string
      amont:
        type: string
      transactionType:
        type: string
      category:
        type: string
      notes:
        type: string
  AddTransactionResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body: 
        type: object
        properties:
          id:
            type: string